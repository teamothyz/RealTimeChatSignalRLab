@page "/groups/{id:Guid}/members"
@model RealTimeChatSignalRLab.Pages.Chat.GroupChatMembersModel
@{
    ViewData["Title"] = "Group Members";
}
@Html.AntiForgeryToken()
<h4>@Model.Group.Name</h4>
<a class="btn btn-primary mt-3" href="/groups/@Model.Id/chat">View Chat</a>

@if (Model.IsOwner)
{
    <div class="btn btn-danger mt-3" onclick="deleteGroup()">Delete Group</div>
}
else
{
    <div class="btn btn-danger mt-3" onclick="leave()">Leave Group</div>
}
<ul id="members-group-list" class="list-group mt-3">
    @foreach (var member in Model.Members)
    {
        <li id="@member.Id" class="list-group-item d-flex justify-content-between">
            <div class="btn">@member.Fullname</div>
            @if (Model.IsOwner && Model.Group.Owner != member.Id)
            {
                <div class="btn btn-danger" onclick="remove('@member.Id')">Delete</div>
            }
        </li>
    }
</ul>
<script>
    connection.start().catch(function (err) {
        console.log(err.toString());
        alert("Error");
    });

    function leave() {
        connection.invoke("LeaveGroup", '@Model.Id').catch(function (err) {
            console.log(err.toString());
            alert("Error");
        });
    }

    function deleteGroup() {
        connection.invoke("DeleteGroup", '@Model.Id').catch(function (err) {
            console.log(err.toString());
            alert("Error");
        });
    }

    function remove(userId) {
        connection.invoke("RemoveMemberFromGroup", userId, '@Model.Id').catch(function (err) {
            console.log(err.toString());
            alert("Error");
        });
    }

    connection.on("RemoveGroupUser", function (result, groupId) {
        if (result == "success") {
            document.location.href = "/groups/1";
        }
    });

    connection.on("AMemberWasRemoved", function (userId, groupId) {
        if (groupId == '@Model.Id') {
            let container = document.getElementById('members-group-list');
            let li = document.getElementById(`${userId}`);
            if (container.contains(li)) {
                container.removeChild(li);
            }
        }
    });
</script>
